CREATE TABLE empresa
(ID serial,
pais varchar(2),
tamanio varchar(1),
primary key(ID));

CREATE TABLE nivel_experiencia
(siglas varchar(2),
significado varchar(40),
PRIMARY KEY(siglas));

CREATE TABLE tipo_empleo
(siglas varchar(2),
significado varchar(40),
PRIMARY KEY(siglas));

CREATE TABLE empleo
(ID serial,
anio int,
nivel_experiencia varchar(2),
tipo_empleo varchar(2) ,
nombre_trabajo varchar(60),
salario int,
moneda varchar(3),
salario_usd int,
promocion_remoto int,
PRIMARY KEY(ID),
FOREIGN KEY(nivel_experiencia) references nivel_experiencia,
FOREIGN KEY(tipo_empleo) references tipo_empleo);

CREATE TABLE empleado
(ID serial,
 work_year int,
 nivel_experiencia varchar(2),
 employment_type varchar(2),
 job_title varchar(60),
 salary int,
 salary_currency varchar(3),
 salary_in_usd int,
 pais varchar(2),
 remote_ratio int,
 company_location varchar(2),
 company_size varchar(1),
 PRIMARY KEY (ID),
 FOREIGN KEY (nivel_experiencia) references nivel_experiencia
)

COPY public.empresa (id, pais, tamanio)
FROM 'C:/Users/sofia/DOWNLO~1/empresa.csv' DELIMITER ';' CSV HEADER;

COPY public.tipo_empleo (siglas, significado)
FROM 'C:/Users/sofia/DOWNLO~1/TIPO_E~1.CSV'
DELIMITER ';' CSV HEADER;

COPY public.nivel_experiencia (siglas, significado)
FROM 'C:/Users/sofia/DOWNLO~1/NIVEL_~1.CSV'
DELIMITER ';' CSV HEADER;

COPY public.empleo (id, anio, nivel_experiencia, tipo_empleo, nombre_trabajo, salario, moneda, salario_usd, promocion_remoto)
FROM 'C:/Users/sofia/DOWNLO~1/empleo.csv'
DELIMITER ';' CSV HEADER;

COPY public.empleado (id, work_year, nivel_experiencia, employment_type, job_title, salary, salary_currency, salary_in_usd, pais, remote_ratio, company_location, company_size)
FROM 'C:/Users/sofia/DOWNLO~1/Empleado.csv'
DELIMITER ';' CSV HEADER;




select empleado.ID as id_empleado ,empresa.Id as id_empresa,empleo.ID as id_empleo
FROM
((empresa INNER JOIN empleado ON empresa.pais=empleado.company_location AND empresa.tamanio=empleado.company_size )
INNER JOIN empleo ON empleo.anio=empleado.work_year AND
empleo.nivel_experiencia =empleado.nivel_experiencia AND
empleo.tipo_empleo=empleado.employment_type AND
empleo.nombre_trabajo =empleado.job_title AND
empleo.salario = empleado.salary AND
empleo.moneda = empleado.salary_currency AND
empleo.salario_usd = empleado.salary_in_usd AND
empleo.promocion_remoto = empleado.remote_ratio)
ORDER BY empleado.ID

ALTER TABLE empleado DROP COLUMN work_year;
ALTER TABLE empleado DROP COLUMN nivel_experiencia;
ALTER TABLE empleado DROP COLUMN employment_type;
ALTER TABLE empleado DROP COLUMN job_title;
ALTER TABLE empleado DROP COLUMN salary;
ALTER TABLE empleado DROP COLUMN salary_currency;
ALTER TABLE empleado DROP COLUMN salary_in_usd;
ALTER TABLE empleado DROP COLUMN remote_ratio;
ALTER TABLE empleado DROP COLUMN company_location;
ALTER TABLE empleado DROP COLUMN company_size;

CREATE TABLE trabaja(
id_empleado int,
id_empresa int,
id_empleo int,
PRIMARY KEY(id_empleado),
FOREIGN KEY(id_empleado) references empleado(ID),
FOREIGN KEY(id_empresa) references empresa(ID),
FOREIGN KEY(id_empleo) references empleo(ID)
)


COPY
public.trabaja (id_empleado, id_empresa, id_empleo)
FROM 'C:/Users/sofia/DOWNLO~1/Trabaja.csv'
DELIMITER ',' CSV HEADER;



-- Consultas de análisis

/*Determinar de que forma el lugar en donde se situa una empresa y 
su tamaño clasifica los salarios obtenidos por sus trabajadores,
destacando en cuales países y tipos de compañias se
presentan ofertas mejor remuneradas para los trabajadores.*/



select  rank() over (order by avg(salario_usd) desc), empresa.id, pais, tamanio,round(avg(salario_usd),3)
	from (empresa inner join trabaja on empresa.id = trabaja.id_empresa)
	inner join empleo on empleo.id = trabaja.id_empleo
	group by empresa.id;
	
select  rank() over (order by avg(salario_usd) desc), pais,round(avg(salario_usd),3)
	from (empresa inner join trabaja on empresa.id = trabaja.id_empresa)
	inner join empleo on empleo.id = trabaja.id_empleo
	group by pais;
	
select  rank() over (order by avg(salario_usd) desc), tamanio,round(avg(salario_usd),3)
	from (empresa inner join trabaja on empresa.id = trabaja.id_empresa)
		inner join empleo on empleo.id = trabaja.id_empleo
	group by tamanio;
	
	
	
/*Analizar según los datos en que nivel de experiencia hay más trabajadores 
y en empleados de que nivel de experiencias las empresas suelen invertir más,
para de esta forma poder concluir según oportunidades de empleo y expectativas
salariales, cual es el mejor grado de experticia a adquirir, teniendo en cuenta
que avanzar en conocimientos siempre implica un esfuerzo e inversión para un
científico de datos.*/

select nivel_experiencia, sum(salario_usd),count(*) 
	from ((empresa inner join trabaja on empresa.id = trabaja.id_empresa)
		inner join empleo on empleo.id = trabaja.id_empleo)
		inner join empleado on empleado.id = trabaja.id_empleado
	group by nivel_experiencia;





--POSIBLE ANÁLISIS 5:
/* 
Identificar mediante el nombre de los cargos en cuales sectores de la ciencia
de datos se tiene una mejor expectativa salarial y observar si existe una
diferencia significativa entre cargos asociados 
*/
-- top 5 empleos mas demandados
SELECT nombre_trabajo, round(count(*),1) AS cantidad_empleos
FROM empleo
GROUP BY nombre_trabajo
ORDER BY cantidad_empleos DESC
LIMIT 5;


-- top 5 de empleos por salario promedio
SELECT nombre_trabajo, round(AVG(salario_usd),1) AS salario_promedio
FROM empleo
GROUP BY nombre_trabajo
ORDER BY salario_promedio DESC
LIMIT 5;


-- promedio salarios de las tres profesiones màs importantes
Select 'Ingeiero de datos' as Nombre_trabajo, ROUND(AVG(salario_usd), 1) AS Salario_promedio
from empleo
where nombre_trabajo LIKE '%Data Engineer%'
union
select 'Cientifico de datos' AS Nombre_trabajo, ROUND(AVG(salario_usd), 1) AS Salario_promedio
from empleo
where nombre_trabajo LIKE '%Data Scientist%'
union
select 'Analista de datos' AS Nombre_trabajo, ROUND(AVG(salario_usd), 1) AS Salario_promedio
from empleo
where nombre_trabajo LIKE '%Analyst%';


--POSIBLE ANÁLISIS 6:
/* 
Estudiar si existe un aumento o decrecimiento promedio de los salarios a
través de los 4 años estudiados, para tener una idea de proyección para el
futuro, en especial en una industria de después de la pandemia de 2020 y 2021.
Tomando en cuenta la agrupación por tipo de empleo, nombre de empleo y
nivel de experiencia necesario, con el proposito de mantener una
homogeneidad.

*/
select anio, count(*) --hay poquita info de la pandemia
from empleo
group by  anio;

--sectores y años, lineas
select tipo_empleo,
       round(avg(CASE WHEN anio = 2020 THEN salario_usd END), 1) AS salario_promedio_2020, 
       round(avg(CASE WHEN anio = 2021 THEN salario_usd END), 1) AS salario_promedio_2021,
	   round(avg(CASE WHEN anio = 2022 THEN salario_usd END), 1) AS salario_promedio_2022,
	   round(avg(CASE WHEN anio = 2023 THEN salario_usd END), 1) AS salario_promedio_2023
from empleo
group by tipo_empleo;

--experiencia y tipo, lineas
select tipo_empleo,
       round(avg(CASE WHEN nivel_experiencia = 'SE' THEN salario_usd END), 1) AS Salario_senior, 
       round(avg(CASE WHEN nivel_experiencia = 'MI' THEN salario_usd END), 1) AS Salario_mid,
	   round(avg(CASE WHEN nivel_experiencia = 'EN' THEN salario_usd END), 1) AS Salario_junior,
	   round(avg(CASE WHEN nivel_experiencia = 'EX' THEN salario_usd END), 1) AS salario_ejecutivo
from empleo
group by tipo_empleo;

--años y experiencia,lineas 
select nivel_experiencia,
       round(avg(case when anio = 2020 then salario_usd END), 1) AS salario_promedio_2020, 
       round(avg(case when anio = 2021 THEN salario_usd END), 1) AS salario_promedio_2021,
	   round(avg(case when anio = 2022 THEN salario_usd END), 1) AS salario_promedio_2022,
	   round(avg(case when anio = 2023 THEN salario_usd end), 1) AS salario_promedio_2023
from empleo
group by nivel_experiencia;
